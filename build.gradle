buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
    }
}

repositories {
    ivy {
        name 'LomLib'
        artifactPattern "http://anthony-lomeli.net/MinecraftMods/LomLib/dev/[module]-dev-[revision].[ext]"
    }
    ivy {
        name 'ThaumCraft'
        artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module][revision].[ext]"
    }
    ivy {
        name 'COFH'
        artifactPattern "http://addons.cursecdn.com/files/762/49/[module]-[revision].[ext]"
    }
    ivy {
        name 'ThermalExpansion'
        artifactPattern "http://addons.cursecdn.com/files/762/50/[module]-[revision].[ext]"
    }
}


apply plugin: "forge"

def loadProperties(String sourceFileName) {
    def config = new Properties()
        def propFile = new File(sourceFileName)
            if (propFile.canRead()) {
                config.load(new FileInputStream(propFile))
                    for (Map.Entry property in config) {
                        ext[property.key] = property.value;
                    }
            }
}

loadProperties 'build.properties'

dependencies {
    compile name: 'LomLib', version: '9-1.1.0', ext: 'jar'
    compile name: 'Thaumcraft', version: '4.0.5b', ext: 'zip'
    compile name: 'ThermalExpansion', version: '3.0.0.b11b', ext: 'jar'
    compile name: 'CoFHCore', version: '2.0.0.b11b', ext: 'jar'
}

group = 'net.lomeli.equivalency'
archivesBaseName = 'Equivalency'
version = "$releaseVersion"

minecraft {
    version = "$mcVersion-$forgeVersion" // grab latest forge
    assetDir = "build/vanilla/assets"
}

processResources {
    exclude '**/xcf/**'

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

jar {
	appendix = 'universal'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = "dev"
}

artifacts {
    archives deobfJar
}